{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","useGoodsState","useState","isReversed","setIsReversed","NONE","sortType","setSortType","orderedGoods","goods","visibleGoods","sort","goodA","goodB","ALPHABET","localeCompare","LENGTH","length","reverse","reorderGoods","state","sortAlphabetically","sortByLength","reset","isSorted","App","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BIC,EAAgB,WACpB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EA9Ca,SACnBC,EADmB,GAGf,IADFH,EACC,EADDA,SAAUH,EACT,EADSA,WAENO,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAMG,cAAcF,EAAO,MACpC,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKTd,GACFO,EAAaQ,UAGRR,EAwBcS,CAAanB,EAAiB,CAAEM,WAAUH,eAG/D,MAAO,CACLA,aACAG,WACAY,QAvBc,WACdd,GAAc,SAAAgB,GAAK,OAAKA,MAuBxBC,mBApByB,WACzBd,EAAYR,EAASe,WAoBrBQ,aAjBmB,WACnBf,EAAYR,EAASiB,SAiBrBO,MAdY,WACZnB,GAAc,GACdG,EAAYR,EAASM,OAarBG,eACAgB,SAVelB,IAAaP,EAASM,OAc5BoB,EAAgB,WAC3B,MASIxB,IARFE,EADF,EACEA,WACAG,EAFF,EAEEA,SACAY,EAHF,EAGEA,QACAG,EAJF,EAIEA,mBACAC,EALF,EAKEA,aACAC,EANF,EAMEA,MACAf,EAPF,EAOEA,aACAgB,EARF,EAQEA,SAGF,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYtB,IAAaP,EAASe,WAGtCe,QAASR,EAPX,iCAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYtB,IAAaP,EAASiB,SAGtCa,QAASP,EAPX,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBAAqB,CAAE,YAAazB,IAEtC0B,QAASX,EALX,sBAUEM,GAAYrB,IAEV,wBACEwB,KAAK,SACLD,UAAU,4BACVG,QAASN,EAHX,sBAWN,6BACGf,EAAasB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvJlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.864eb1a7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst reorderGoods = (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) => {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodA.localeCompare(goodB, 'en');\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n      default: {\n        return 0;\n      }\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nconst useGoodsState = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setIsReversed(state => !state);\n  };\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const orderedGoods = reorderGoods(goodsFromServer, { sortType, isReversed });\n  const isSorted = sortType !== SortType.NONE;\n\n  return {\n    isReversed,\n    sortType,\n    reverse,\n    sortAlphabetically,\n    sortByLength,\n    reset,\n    orderedGoods,\n    isSorted,\n  };\n};\n\nexport const App: React.FC = () => {\n  const {\n    isReversed,\n    sortType,\n    reverse,\n    sortAlphabetically,\n    sortByLength,\n    reset,\n    orderedGoods,\n    isSorted,\n  } = useGoodsState();\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning', { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(isSorted || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n\n          )}\n      </div>\n\n      <ul>\n        {orderedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}